str(iris)
ind <- sample(2, nrow(iris), replace = TRUE, prob= c(75,25))
irisTrain <- iris[ind == 1,]
irisTrain <- iris[ind == 2,]
irisTrain <- iris[ind == 1,]
irisTest <- iris[ind == 2,]
str(iris)
Y <- irisTrain$Sepal.Length
X <- irisTrain[,c("Sepal.Width", "Petal.Length", "Petal.Width")]
?matrix
as.matrix(X)
test <- as.matrix(X)
rm(test)
theta <- solve(t(X)%%X)%%t(X)%%Y
t(X)
matrix(1,2,3,4,nrow = 2, ncol = 2)
matrix(c(1,2,3,4),nrow = 2, ncol = 2)%%matrix(c(1,2,3,4),nrow = 2, ncol = 2)
matrix(c(1,2,3,4),nrow = 2, ncol = 2)
matrix(c(1,2,3,4),nrow = 2, ncol = 2)%*%matrix(c(1,2,3,4),nrow = 2, ncol = 2)
theta <- solve(t(X)%*%X)%%t(X)%*%Y
theta <- solve(t(X)%*%X)%*%t(X)%*%Y
XtX <- t(X)%*%X
X <-as.matrix(X)
theta <- solve(t(X)%*%X)%*%t(X)%*%Y
Xtest <- as.matrix(irisTest)
Ytest <- Xtest%*%theta
Xtest <- as.matrix(irisTest[,c("Sepal.Width", "Petal.Length", "Petal.Width")])
Ytest <- Xtest%*%theta
c(Y,Ytest)
cbind(Y,Ytest)
f <- function(x) 8*x^4 - 2*x + 3
rm(list=ls())
f <- function(x) 8*x^4 - 2*x + 3
runif(0,2,8)
runif(4,2,8)
sample(5, 1, 10)
sample(5, 2, 10)
sample(5, 3, 10)
sample(1:5, 3)
sample(1:5, 3)
sample(1:5, 3)
sample(1:5, 3)
sample(1:5, 3)
sample(1:5, 6)
sample(1:5, 6, replace = TRUE)
f(sample(1:5, 6, replace = TRUE))
f <- function(x) 0.5*x^3 - 2*x + 3 + x^2
f(sample(1:5, 6, replace = TRUE))
f(sample(1:20, 10, replace = TRUE))
seed(1)
seed(2)
set.seed(1)
f(sample(1:20, 10, replace = TRUE))
f(sample(1:20, 10, replace = TRUE))
set.seed(1)
f(sample(1:20, 10, replace = TRUE))
f(sample(1:40, 20, replace = TRUE))
set.seed(1)
X <- sample(1:40, 20, replace = TRUE)
f(11)
f(15)
set.seed(1)
Y <- f(sample(1:40, 20, replace = TRUE))
Xtrain <- X[1:15]
Ytrain <- Y[1:15]
Xtest <- X[16:20]
Ytest <- Y[16:20]
X <- matric(X, X^2, X^3)
X <- matrix(X, X^2, X^3)
rm(X)
X <- cbind(X, X^2, X^3)
X <- cbind(Xtrain, Xtrain^2, Xtrain^3)
theta <- solve(t(X)%*%X)%*%X%*%Ytrain
X <- cbind(rep(1,15),X)
theta <- solve(t(X)%*%X)%*%X%*%Ytrain
theta <- solve(t(X)%*%X)%*%t(X)%*%Ytrain
View(f)
X = rep(c(1,2,3), each = 5)
Y <- X
library(party)
install.packages('party')
library(party)
tree <- ctree(X ~Y)
plot(tree)
X <- as.factor(X)
Y <-X
tree <- ctree(X ~Y)
plot(tree)
X = rep(c(1,2,3), each = 5)
tree <- ctree(X ~Y)
plot(tree)
X = rep(c(1 + runif(1,-0.01,0.01),2,3), each = 5)
X
X = rep(c(1,2,3), each = 5)
Xeps <- runif(10, -0.01, 0.01)
X <- X + Xeps
Xeps <- runif(15, -0.01, 0.01)
X <- X + Xeps
tree <- ctree(X ~Y)
plot(tree)
Z <- cbind(X,Y)
tree <- ctree(X ~Y, data = Z)
Z <- as.data.frame(Z)
tree <- ctree(X ~Y, data = Z)
plot(tree)
tree <- ctree(Y ~X, data = Z)
plot(tree)
Z <- cbind(X,X,Y)
View(Z)
names(Z) <- c("a","b","c")
tree <- ctree(c ~ a + b, data = Z)
Z <- as.data.frame(Z)
tree <- ctree(c ~ a + b, data = Z)
View(Z)
Z <- Z[,-1]
S <- X
Z <- cbind(Z,S)
tree <- ctree(Y ~ S + Y, data = Z)
plot(tree)
myFormula <- Species ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Widthiris_ctree <- ctree(myFormula, data=trainData)
myFormula <- Species ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width
iris_ctree <- ctree(myFormula, data=iris)
plot(iris_ctree)
Z <- melt(Z)
library(reshape2)
melt(Z)
Z <- melt(Z)
View(Z)
tree <- ctree(Y ~ S + Y, data = Z)
plot(tree)
source('~/Documents/GitHub/nba_R/earnings.R')
source('~/Documents/GitHub/nba_R/oddPrediction.R')
dataset <- importDataset('data/datasetInit2.csv')
setwd("~/Documents/GitHub/nba_R")
dataset <- importDataset('data/datasetInit2.csv')
dataset <- dataset[dataset$Saison == 2017,]
earns <- earnings(dataset)
earns <- earnings(dataset, 0.0288)
cbind(c(1,2),c(2,2))
rbind(c(1,2),c(3,4))
source('~/Documents/GitHub/nba_R/earnings.R')
results <- earnings3(dataset, 0.0288)
source('~/Documents/GitHub/nba_R/earnings.R')
results <- earnings3(dataset, 0.0288)
source('~/Documents/GitHub/nba_R/earnings.R')
results <- earnings3(dataset, 0.0288)
View(results)
rbind(NULL, c(1,2,3))
rbind(c(2,3,4), c(1,2,3))
source('~/Documents/GitHub/nba_R/earnings.R')
results <- earnings3(dataset, 0.0288)
c(1,2,3)
source('~/Documents/GitHub/nba_R/earnings.R')
results <- earnings3(dataset, 0.0288)
source('~/Documents/GitHub/nba_R/earnings.R')
results <- earnings3(dataset, 0.0288)
View(results)
source('~/Documents/GitHub/nba_R/earnings.R')
results <- earnings3(dataset, 0.0288)
View(results)
plot(results[,1])
source('~/Documents/GitHub/nba_R/earnings.R')
results <- earnings3(dataset, 0.0288)
View(results)
install.packages('plot3D')
library(plot3D)
surf3D(results[,2], results[,3], results[,1])
surface3d(results[,2], results[,3], results[,1])
require(akima) ; require(rgl)
install.packages('akima')
install.packages(rgl)
install.packages('rgl')
library(rgl)
library(akima)
library(rgl)
install.packages('rgl')
library(rgl)
persp(results[,2], results[,3], results[,1])
plot(results[,1])
source('~/Documents/GitHub/nba_R/earnings.R')
results <- earnings3(dataset, 0.0288)
plot(results[,1])
View(results)
source('~/Documents/GitHub/nba_R/earnings.R')
results <- earnings3(dataset, 0.0288)
View(results)
source('~/Documents/GitHub/nba_R/earnings.R')
results <- earnings3(dataset, 0.0288)
View(results)
source('~/Documents/GitHub/nba_R/earnings.R')
earns2 <- earnings(dataset, 0.0288)
write.csv2(earns2, 'earns2.csv')
source('~/Documents/GitHub/nba_R/earnings.R')
earns3 <- earnings2(dataset)
View(earns2)
View(earns3)
source('~/Documents/GitHub/nba_R/earnings.R')
earns3 <- earnings3(dataset)
earns3 <- earnings3(dataset, 0.0288)
View(earns3)
source('~/Documents/GitHub/nba_R/earnings.R')
source('~/Documents/GitHub/nba_R/earnings.R')
earns3 <- earnings3(dataset, 0.0288)
View(earns3)
which(earns3[,5] == max(earns3[,5]))
earns3 <- earns3[earns3[,2] + earns3[,3] <= 1,]
View(earns3)
which(earns3[,5] == max(earns3[,5]))
source('~/Documents/GitHub/nba_R/earnings.R')
earns2 <- earnings(dataset, 0.0288)
earns2 <- earnings2(dataset)
View(earns2)
